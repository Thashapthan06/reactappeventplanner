{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THASHAPTHAN\\\\Downloads\\\\New folder\\\\reactappeventplanner\\\\src\\\\Pages\\\\ServiceProviderProfileForUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './ServiceProviderProfileForUser.css';\nimport './RatingsAndReviewsUser.css';\nimport RatingsAndReviewsUser from './RatingsAndReviewsUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServiceProviderProfileForUser() {\n  _s();\n  const [serviceProvider, setServiceProvider] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const email = new URLSearchParams(location.search).get('email');\n    if (email) {\n      fetch(`https://eventplanner.azurewebsites.net/service_provider?email=${email}`).then(response => response.json()).then(data => {\n        setServiceProvider(data);\n      }).catch(error => {\n        console.error('Error fetching service provider data:', error);\n      });\n    }\n  }, [location]);\n  if (!serviceProvider) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttongroup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serviceProvider\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons02\",\n          children: [\"Service Provider ID: \", serviceProvider.ServiceproviderID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons02\",\n          children: [\"Service Provider Name: \", serviceProvider.ServiceproviderName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons02\",\n          children: [\"Email: \", serviceProvider.Email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons02\",\n          children: [\"Available service: \", serviceProvider.AvailableService]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons02\",\n          children: [\"Amount: \", serviceProvider.Amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RatingsAndReviewsUser, {\n      serviceProviderID: serviceProvider.ServiceproviderID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(ServiceProviderProfileForUser, \"Y6n9rmpq8F1ov+95HqDlTWZScOc=\", false, function () {\n  return [useLocation];\n});\n_c = ServiceProviderProfileForUser;\nexport default ServiceProviderProfileForUser;\nvar _c;\n$RefreshReg$(_c, \"ServiceProviderProfileForUser\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","RatingsAndReviewsUser","jsxDEV","_jsxDEV","ServiceProviderProfileForUser","_s","serviceProvider","setServiceProvider","location","email","URLSearchParams","search","get","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ServiceproviderID","ServiceproviderName","Email","AvailableService","Amount","serviceProviderID","_c","$RefreshReg$"],"sources":["C:/Users/THASHAPTHAN/Downloads/New folder/reactappeventplanner/src/Pages/ServiceProviderProfileForUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './ServiceProviderProfileForUser.css';\r\nimport './RatingsAndReviewsUser.css';\r\nimport RatingsAndReviewsUser from './RatingsAndReviewsUser';\r\n\r\nfunction ServiceProviderProfileForUser() {\r\n    const [serviceProvider, setServiceProvider] = useState(null);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const email = new URLSearchParams(location.search).get('email');\r\n\r\n        if (email) {\r\n            fetch(`https://eventplanner.azurewebsites.net/service_provider?email=${email}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setServiceProvider(data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching service provider data:', error);\r\n                });\r\n        }\r\n    }, [location]);\r\n\r\n    if (!serviceProvider) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"buttongroup\">\r\n                <div className=\"serviceProvider\">\r\n                    <button className=\"notificationButtons02\">Service Provider ID: {serviceProvider.ServiceproviderID}</button>\r\n                    <button className=\"notificationButtons02\">Service Provider Name: {serviceProvider.ServiceproviderName}</button>\r\n                    <button className=\"notificationButtons02\">Email: {serviceProvider.Email}</button>\r\n                    <button className=\"notificationButtons02\">Available service: {serviceProvider.AvailableService}</button>\r\n                    <button className=\"notificationButtons02\">Amount: {serviceProvider.Amount}</button>\r\n                </div>\r\n            </div>\r\n\r\n            <RatingsAndReviewsUser serviceProviderID={serviceProvider.ServiceproviderID} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServiceProviderProfileForUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}