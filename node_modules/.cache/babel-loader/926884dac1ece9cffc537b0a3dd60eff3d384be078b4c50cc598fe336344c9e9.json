{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THASHAPTHAN\\\\Downloads\\\\New folder\\\\reactappeventplanner\\\\src\\\\Pages\\\\UserChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./UserChatBot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserChatBot() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  useEffect(() => {\n    // Fetch chat history data when component mounts\n    fetchChatHistory();\n  }, []);\n  const sendQuery = async () => {\n    try {\n      const res = await fetch(\"https://eventplanner.azurewebsites.net/user_process_query\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await res.json();\n      setResponse(data.response02);\n      fetchChatHistory(); // Refresh chat history after sending query\n    } catch (error) {\n      console.error(\"Error sending query:\", error);\n    }\n  };\n  const fetchChatHistory = async () => {\n    try {\n      const res = await fetch(\"https://eventplanner.azurewebsites.net/user_chat_history\");\n      const data = await res.json();\n      setChatHistory(data.chat_history02);\n    } catch (error) {\n      console.error(\"Error fetching chat history:\", error);\n    }\n  };\n  useEffect(() => {\n    import('./UserChatBot.css');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event Planner Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history01\",\n        children: chatHistory.map((message, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-query\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Ask your question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendQuery,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(UserChatBot, \"O5tGd5Fh8H3bx0jWgHuyyuMihXw=\");\n_c = UserChatBot;\nexport default UserChatBot;\nvar _c;\n$RefreshReg$(_c, \"UserChatBot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserChatBot","_s","query","setQuery","response","setResponse","chatHistory","setChatHistory","fetchChatHistory","sendQuery","res","fetch","method","headers","body","JSON","stringify","data","json","response02","error","console","chat_history02","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/THASHAPTHAN/Downloads/New folder/reactappeventplanner/src/Pages/UserChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./UserChatBot.css\";\r\n\r\nfunction UserChatBot() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch chat history data when component mounts\r\n    fetchChatHistory();\r\n  }, []);\r\n\r\n  const sendQuery = async () => {\r\n    try {\r\n      const res = await fetch(\"https://eventplanner.azurewebsites.net/user_process_query\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ query }),\r\n      });\r\n      const data = await res.json();\r\n      setResponse(data.response02);\r\n      fetchChatHistory(); // Refresh chat history after sending query\r\n    } catch (error) {\r\n      console.error(\"Error sending query:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchChatHistory = async () => {\r\n    try {\r\n      const res = await fetch(\"https://eventplanner.azurewebsites.net/user_chat_history\");\r\n      const data = await res.json();\r\n      setChatHistory(data.chat_history02);\r\n    } catch (error) {\r\n      console.error(\"Error fetching chat history:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    import ('./UserChatBot.css');\r\n}, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"chatbot container\">\r\n        <p>Event Planner Chatbot</p>\r\n        <div className=\"chat-history01\">\r\n          {chatHistory.map((message, index) => {\r\n            return (\r\n              <div key={index} className={\"message-container\"}>\r\n                <span className=\"message\">{message}</span>\r\n                <p></p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"input-query\">\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"Ask your question\"\r\n          />\r\n          <button onClick={sendQuery}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}