{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THASHAPTHAN\\\\Downloads\\\\New folder\\\\reactappeventplanner\\\\src\\\\Pages\\\\ServiceProviderProfileForServiceProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ServiceProviderProfileForServiceProvider.css'; // Import the CSS file for Dashboard styles\nimport './RatingsAndReviewsServiceprovider.css';\nimport RatingsAndReviewsServiceprovider from './RatingsAndReviewsServiceprovider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServiceProviderProfileForServiceProvider() {\n  _s();\n  const [serviceProvider, setServiceProvider] = useState(null);\n  useEffect(() => {\n    // Retrieve service provider email from local storage\n    const serviceProviderEmail = localStorage.getItem('userEmail');\n    if (serviceProviderEmail) {\n      fetch(`https://eventplanner.azurewebsites.net/service_provider?email=${serviceProviderEmail}`).then(response => response.json()).then(data => {\n        setServiceProvider(data);\n      }).catch(error => {\n        console.error('Error fetching service provider profile:', error);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [serviceProvider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttongroup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serviceProvider\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons01\",\n          children: [\"Service Provider ID: \", serviceProvider.ServiceproviderID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons01\",\n          children: [\"Service Provider Name: \", serviceProvider.ServiceproviderName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons01\",\n          children: [\"Email: \", serviceProvider.Email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons01\",\n          children: [\"Available service: \", serviceProvider.AvailableService]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notificationButtons01\",\n          children: [\"Amount: \", serviceProvider.Amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), serviceProvider && /*#__PURE__*/_jsxDEV(RatingsAndReviewsServiceprovider, {\n      serviceProviderID: serviceProvider.ServiceproviderID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(ServiceProviderProfileForServiceProvider, \"wVILaKkfBPDo2EG//4TbKdH0uug=\");\n_c = ServiceProviderProfileForServiceProvider;\nexport default ServiceProviderProfileForServiceProvider;\nvar _c;\n$RefreshReg$(_c, \"ServiceProviderProfileForServiceProvider\");","map":{"version":3,"names":["React","useState","useEffect","RatingsAndReviewsServiceprovider","jsxDEV","_jsxDEV","ServiceProviderProfileForServiceProvider","_s","serviceProvider","setServiceProvider","serviceProviderEmail","localStorage","getItem","fetch","then","response","json","data","catch","error","console","children","className","ServiceproviderID","fileName","_jsxFileName","lineNumber","columnNumber","ServiceproviderName","Email","AvailableService","Amount","serviceProviderID","_c","$RefreshReg$"],"sources":["C:/Users/THASHAPTHAN/Downloads/New folder/reactappeventplanner/src/Pages/ServiceProviderProfileForServiceProvider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ServiceProviderProfileForServiceProvider.css'; // Import the CSS file for Dashboard styles\r\nimport './RatingsAndReviewsServiceprovider.css';\r\nimport RatingsAndReviewsServiceprovider from './RatingsAndReviewsServiceprovider';\r\n\r\nfunction ServiceProviderProfileForServiceProvider() {\r\n    const [serviceProvider, setServiceProvider] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Retrieve service provider email from local storage\r\n        const serviceProviderEmail = localStorage.getItem('userEmail');\r\n\r\n        if (serviceProviderEmail) {\r\n            fetch(`https://eventplanner.azurewebsites.net/service_provider?email=${serviceProviderEmail}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setServiceProvider(data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching service provider profile:', error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {serviceProvider && (\r\n                <div className=\"buttongroup\">\r\n                    <div className=\"serviceProvider\">\r\n                        <button className=\"notificationButtons01\">Service Provider ID: {serviceProvider.ServiceproviderID}</button>\r\n                        <button className=\"notificationButtons01\">Service Provider Name: {serviceProvider.ServiceproviderName}</button>\r\n                        <button className=\"notificationButtons01\">Email: {serviceProvider.Email}</button>\r\n                        <button className=\"notificationButtons01\">Available service: {serviceProvider.AvailableService}</button>\r\n                        <button className=\"notificationButtons01\">Amount: {serviceProvider.Amount}</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Pass the service provider ID to the RatingsAndReviewsServiceprovider component */}\r\n            {serviceProvider && <RatingsAndReviewsServiceprovider serviceProviderID={serviceProvider.ServiceproviderID} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServiceProviderProfileForServiceProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gDAAgD,CAAC,CAAC;AACzD,OAAO,wCAAwC;AAC/C,OAAOC,gCAAgC,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,SAASC,wCAAwCA,CAAA,EAAG;EAAAC,EAAA;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE9D,IAAIF,oBAAoB,EAAE;MACtBG,KAAK,CAAE,iEAAgEH,oBAAqB,EAAC,CAAC,CACzFI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVR,kBAAkB,CAACQ,IAAI,CAAC;MAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MACpE,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA;IAAAgB,QAAA,GACKb,eAAe,iBACZH,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAD,QAAA,eACxBhB,OAAA;QAAKiB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC5BhB,OAAA;UAAQiB,SAAS,EAAC,uBAAuB;UAAAD,QAAA,GAAC,uBAAqB,EAACb,eAAe,CAACe,iBAAiB;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC3GtB,OAAA;UAAQiB,SAAS,EAAC,uBAAuB;UAAAD,QAAA,GAAC,yBAAuB,EAACb,eAAe,CAACoB,mBAAmB;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC/GtB,OAAA;UAAQiB,SAAS,EAAC,uBAAuB;UAAAD,QAAA,GAAC,SAAO,EAACb,eAAe,CAACqB,KAAK;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACjFtB,OAAA;UAAQiB,SAAS,EAAC,uBAAuB;UAAAD,QAAA,GAAC,qBAAmB,EAACb,eAAe,CAACsB,gBAAgB;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACxGtB,OAAA;UAAQiB,SAAS,EAAC,uBAAuB;UAAAD,QAAA,GAAC,UAAQ,EAACb,eAAe,CAACuB,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,EAGAnB,eAAe,iBAAIH,OAAA,CAACF,gCAAgC;MAAC6B,iBAAiB,EAAExB,eAAe,CAACe;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7G,CAAC;AAEd;AAACpB,EAAA,CArCQD,wCAAwC;AAAA2B,EAAA,GAAxC3B,wCAAwC;AAuCjD,eAAeA,wCAAwC;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}