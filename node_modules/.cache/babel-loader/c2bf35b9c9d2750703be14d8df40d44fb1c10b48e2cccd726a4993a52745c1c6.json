{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THASHAPTHAN\\\\Downloads\\\\New folder\\\\reactappeventplanner\\\\src\\\\Pages\\\\RatingsAndReviewsServiceprovider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RatingsAndReviewsServiceprovider.css'; // Import the CSS file for Rating styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RatingsAndReviewsServiceprovider({\n  serviceProviderID\n}) {\n  _s();\n  const [ratings, setRatings] = useState([]);\n  useEffect(() => {\n    // Fetch ratings and reviews for the specific service provider\n    fetchRatings();\n  }, [serviceProviderID]); // Execute useEffect when serviceProviderID changes\n\n  const fetchRatings = async () => {\n    try {\n      // Fetch ratings and reviews data from the backend API for the specific service provider\n      const response = await fetch(`https://eventplanner.azurewebsites.net/ratingserviceprovider?service_provider_id=${serviceProviderID}`);\n      const data = await response.json();\n      console.log('Fetched ratings:', data); // Log fetched data for debugging\n      setRatings(data);\n    } catch (error) {\n      console.error('Error fetching ratings:', error);\n    }\n  };\n  useEffect(() => {\n    console.log('Ratings:', ratings); // Add this line to log ratings\n  }, [ratings]); // Execute useEffect when ratings changes\n\n  // Function to render stars based on rating value\n  const renderStars = ratingValue => {\n    const stars = [];\n    // Fill stars based on rating value\n    for (let i = 1; i <= 5; i++) {\n      if (i <= ratingValue) {\n        stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star\",\n          style: {\n            color: 'yellow'\n          },\n          children: \"\\u2605\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this));\n      } else {\n        stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star\",\n          children: \"\\u2605\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this));\n      }\n    }\n    return stars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rating-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: Array.isArray(ratings) && ratings.map((rating, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card04\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./User.jpg\",\n          alt: \"Service Provider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Rating \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"star-rating\",\n            children: [renderStars(rating.RatingValue), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: rating.ReviewDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"rating-form\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/analytics\",\n        className: \"rating-button\",\n        children: \"View Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(RatingsAndReviewsServiceprovider, \"yIkh5WpP0z1x/WRx3lEoxRyktoM=\");\n_c = RatingsAndReviewsServiceprovider;\nexport default RatingsAndReviewsServiceprovider;\nvar _c;\n$RefreshReg$(_c, \"RatingsAndReviewsServiceprovider\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","RatingsAndReviewsServiceprovider","serviceProviderID","_s","ratings","setRatings","fetchRatings","response","fetch","data","json","console","log","error","renderStars","ratingValue","stars","i","push","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","rating","index","src","alt","RatingValue","ReviewDetails","to","_c","$RefreshReg$"],"sources":["C:/Users/THASHAPTHAN/Downloads/New folder/reactappeventplanner/src/Pages/RatingsAndReviewsServiceprovider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './RatingsAndReviewsServiceprovider.css'; // Import the CSS file for Rating styles\r\n\r\nfunction RatingsAndReviewsServiceprovider({ serviceProviderID }) {\r\n    const [ratings, setRatings] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch ratings and reviews for the specific service provider\r\n        fetchRatings();\r\n    }, [serviceProviderID]); // Execute useEffect when serviceProviderID changes\r\n\r\n    const fetchRatings = async () => {\r\n        try {\r\n            // Fetch ratings and reviews data from the backend API for the specific service provider\r\n            const response = await fetch(`https://eventplanner.azurewebsites.net/ratingserviceprovider?service_provider_id=${serviceProviderID}`);\r\n            const data = await response.json();\r\n            console.log('Fetched ratings:', data); // Log fetched data for debugging\r\n            setRatings(data);\r\n        } catch (error) {\r\n            console.error('Error fetching ratings:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('Ratings:', ratings); // Add this line to log ratings\r\n    }, [ratings]); // Execute useEffect when ratings changes\r\n\r\n    // Function to render stars based on rating value\r\n    const renderStars = (ratingValue) => {\r\n        const stars = [];\r\n        // Fill stars based on rating value\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (i <= ratingValue) {\r\n                stars.push(<span key={i} className=\"star\" style={{ color: 'yellow' }}>★</span>);\r\n            } else {\r\n                stars.push(<span key={i} className=\"star\">★</span>);\r\n            }\r\n        }\r\n        return stars;\r\n    };\r\n\r\n    return (\r\n        <div className=\"rating-container\">\r\n            <hr></hr>\r\n            {/* Map over fetched ratings and display each one */}\r\n            <div className=\"card-container\">\r\n                {Array.isArray(ratings) && ratings.map((rating, index) => (\r\n                    <div key={index} className=\"card04\">\r\n                        <img src=\"./User.jpg\" alt=\"Service Provider\" />\r\n                        <div className=\"card-content\">\r\n                            <h2>Rating {index + 1}</h2>\r\n                            <div className=\"star-rating\">\r\n                                {renderStars(rating.RatingValue)} {/* Ensure correct key */}\r\n                            </div>\r\n                            <p>{rating.ReviewDetails}</p> {/* Ensure correct key */}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <hr></hr>\r\n            <hr></hr>\r\n            <form className=\"rating-form\">\r\n                <Link to=\"/analytics\" className=\"rating-button\">View Analytics</Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RatingsAndReviewsServiceprovider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}