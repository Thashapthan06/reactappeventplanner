{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THASHAPTHAN\\\\Downloads\\\\New folder\\\\reactappeventplanner\\\\src\\\\Pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleResetPassword = async e => {\n    e.preventDefault();\n\n    // Check if any field is empty\n    if (!email || !newPassword || !confirmPassword) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setError(\"New password and confirm password don't match\");\n      return;\n    }\n    try {\n      const response = await fetch('https://eventplanner.azurewebsites.net/resetpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          newPassword: newPassword,\n          confirmPassword: confirmPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Password successfully changed, redirect to login page\n        window.location.href = '/login';\n      } else {\n        setError(data.error);\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setError('An error occurred while resetting password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading\",\n      children: \"Welcome to Event Planner!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter your new password to reset your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reset-form\",\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newpassword\",\n          name: \"newpassword\",\n          placeholder: \"New Password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"conpassword\",\n          name: \"conpassword\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"reset-button\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"pNBM8z5MDSyZFazDLYbOSpLdcwA=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","handleResetPassword","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","window","location","href","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/THASHAPTHAN/Downloads/New folder/reactappeventplanner/src/Pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ResetPassword.css';\r\n\r\nfunction ResetPassword() {\r\n    const [email, setEmail] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if any field is empty\r\n        if (!email || !newPassword || !confirmPassword) {\r\n            setError(\"Please fill in all fields\");\r\n            return;\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            setError(\"New password and confirm password don't match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('https://eventplanner.azurewebsites.net/resetpassword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    newPassword: newPassword,\r\n                    confirmPassword: confirmPassword,\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                // Password successfully changed, redirect to login page\r\n                window.location.href = '/login';\r\n            } else {\r\n                setError(data.error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error resetting password:', error);\r\n            setError('An error occurred while resetting password');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-container\">\r\n            <p className='heading'>Welcome to Event Planner!</p>\r\n            <p>Please enter your new password to reset your password</p>\r\n            <form className=\"reset-form\" onSubmit={handleResetPassword}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" id=\"newpassword\" name=\"newpassword\" placeholder=\"New Password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" id=\"conpassword\" name=\"conpassword\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </div>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                <button type=\"submit\" className=\"reset-button\">Change Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}